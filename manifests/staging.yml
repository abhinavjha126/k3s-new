apiVersion: v1
kind: Namespace
metadata:
  name: echo-staging

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: echo-staging
  namespace: echo-staging
  labels:
    app: echo-staging
spec:
  selector:
    matchLabels:
      app: echo-staging
  template:
    metadata:
      labels:
        app: echo-staging
    spec:
      containers:
      - name: echo-staging
        image: mendhak/http-https-echo
        ports:
        - containerPort: 80
        - containerPort: 443
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "device.k3s.redcarpetup.com/roles"
                operator: In
                values:
                - staging
---

apiVersion: v1
kind: Service
metadata:
  name: echo-staging-service1
  namespace: echo-staging
spec:
  selector:
    app: echo-staging
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: echo-staging-service2
  namespace: echo-staging
spec:
  selector:
    app: echo-staging
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-staging-ingress
  namespace: echo-staging
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  tls:
  - hosts:
      - staging-k3s.redcarpetup.com
    secretName: ssl
  rules:
  - host: "staging-k3s.redcarpetup.com"
    http:
      paths:
      - path: /api1
        pathType: Prefix
        backend:
          service:
            name: echo-staging-service1
            port: 
              number: 80
      - path: /api2
        pathType: Prefix
        backend:
          service:
            name: echo-staging-service2
            port: 
              number: 80